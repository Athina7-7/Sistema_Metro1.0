/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parchatemetro;
//importamos librerias
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;

public class flujo extends javax.swing.JFrame implements ItemListener{

    /**
     * Creates new form flujo(constructor)
     */
    public flujo() {
        //en init es donde se crean los componentes
        initComponents();
        this.setLocationRelativeTo(null);
        
        //-------------------------Redireccion de iconos--------------------------
        horarios.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                // Hacer visible la otra pestaña
                horarios otraPestana = new horarios();
                otraPestana.setVisible(true);
                dispose();
            }
        });
        iconoCasita.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                // Hacer visible la otra pestaña
                casita otraPestana = new casita();
                otraPestana.setVisible(true);
                dispose();
            }
        });
        //------------------------------------------------------------
        //para que cuando lo usen, escuche (lineaMetro es un combobox)
        lineaMetro.addItemListener(this);
        estacion.addItemListener(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_lineaMetro = new javax.swing.JLabel();
        lineaMetro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        estacion = new javax.swing.JComboBox<>();
        textoCantPasajeros = new javax.swing.JLabel();
        iconoCasita = new javax.swing.JLabel();
        fotoEstacion = new javax.swing.JLabel();
        horarios = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_lineaMetro.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel_lineaMetro.setText("Seleccione linea de metro");
        jPanel1.add(jLabel_lineaMetro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        lineaMetro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lineaMetro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Linea A", "Linea B" }));
        lineaMetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineaMetroActionPerformed(evt);
            }
        });
        jPanel1.add(lineaMetro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel1.setText("Seleccione estacion");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        estacion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        estacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estacionActionPerformed(evt);
            }
        });
        jPanel1.add(estacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 90, -1));
        jPanel1.add(textoCantPasajeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 160, 150));

        iconoCasita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/casa.png"))); // NOI18N
        jPanel1.add(iconoCasita, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        fotoEstacion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(fotoEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 160, 110));

        horarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Horarios.png"))); // NOI18N
        jPanel1.add(horarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 60, 20));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondoFlujo.png"))); // NOI18N
        jPanel1.add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 230));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estacionActionPerformed

    private void lineaMetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineaMetroActionPerformed

    }//GEN-LAST:event_lineaMetroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(flujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(flujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(flujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(flujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new flujo().setVisible(true);
            }
        });
        
    }
     public int flujo(){
        //capacidad max del metro será 20.000
        //poco concurrido es menos de 10.000 usuarios
        //moderado es <=10.000<15000
        //saturado es >=15000
        int n=20000;
        cantidadPasajeros=(int) ((Math.random()*n)+1);
        return cantidadPasajeros;
    }
    public void cambiarImagen(String estacion){
        estacion=estacion.toLowerCase();
        //Creamos un ImageIcon el cual, para crear una nueva instancia recibira la ruta de la imagen
        //ya con esta creamos un Icon, el cual contendrá un objeto de ImageIcon,esto para poder usar su metododo getScaled para escalar la imagen
        //este metodo se lo aplicamos a la imangen que hay en img, por eso usamos getImage, y recibe 3 parametros, width,length y metodo para ajustar la imagen
        //entonces le pasamos como parametros el dato que obtenemos al usar getIconWidth y así, y en el ultimo parametro usamos el metodo de SCALE_DEFAULT que es
        //de la libreria Image
        //getClass, es para que se busque la imagen en esta clase, y ya despues con getsource le pasamos la ubicacion dentro de la clase
        ImageIcon img = new javax.swing.ImageIcon(getClass().getResource("/imgestacion/"+estacion+".jpg"));
       //en este caso, no use getWidth, sino que con los datos del jlabel, busque en propiedades y obtuve su tamaños que son estos
        Icon icon= new ImageIcon(img.getImage().getScaledInstance(160,250,java.awt.Image.SCALE_DEFAULT));
        fotoEstacion.setIcon(icon);
        this.repaint();
//fotoEstacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgestacion/"+estacion+".jpg")));
        
    }
//jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondoFlujo.png")));
    //esta funcion es para que al seleccionar la estacion salga el texto del flujo.
    //como java soporta html, lo uso porque de resto es imposible, solo con java, hacer un salto de linea, y aproveche y use tambien
    //font color para poner color solo en una palabra, porque con java le ponia a todo lo que hubiera en el jlabel
    public void cambiarTexto(String estacion){
        int pasajeros=flujo();
        String indicador;
        if(pasajeros<10000){
            indicador="Poco saturado";
                if(estacion.equals("San Antonio") || estacion.equals("Acevedo") || estacion.equals("Niquia") || estacion.equals("San Javier") || estacion.equals("Itagui")){
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='green'>"+indicador+"</font><p>Esta estacion cuenta con PACs<html>");
            }else{
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='green'>"+indicador+"</font><html>");
                }
        }else if(pasajeros>=10000 && pasajeros<15000){
            indicador="Moderado";
            if(estacion.equals("San Antonio") || estacion.equals("Acevedo") || estacion.equals("Niquia") || estacion.equals("San Javier") || estacion.equals("Itagui")){
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='yellow'>"+indicador+"</font><p>Esta estacion cuenta con PACs<html>");
            }else{
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='yellow'>"+indicador+"</font><html>");
                }
        }else if(pasajeros>=15000){
            indicador="Saturado";
            if(estacion.equals("San Antonio") || estacion.equals("Acevedo") || estacion.equals("Niquia") || estacion.equals("San Javier") || estacion.equals("Itagui")){
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='red'>"+indicador+"</font><p>Esta estacion cuenta con PACs<html>");
            }else{
                textoCantPasajeros.setText("<html>"+estacion+"<p>Cantidad de pasajeros: "+pasajeros+"<p>Flujo: <font color='red'>"+indicador+"</font><html>");
                }
        }
    }
    public void itemStateChanged(ItemEvent e){
        //es un metodo que tendrá como parametro un evento de tipo item que llamaremos e
        //evento es una señal de que algo a sucedido, cualquier accion realizada por el usuario o sistema
        //que afecta o interactua con la interfaz gráfica
        //si el event viene de lineaMetro
        if(e.getSource() == lineaMetro){
            if(e.getStateChange() == ItemEvent.SELECTED){
            //si el item que aparece predeterminado es  uno de estos, no va a escuchar llamado sino  hasta que halla un cambio
            //esto es si el evento tuvo un cambio en su estado, y ese cambio es que el elemento fue seleccionado, que haga esto
            itemSeleccionado=(String) lineaMetro.getSelectedItem();
            //le asignamos el valor a un string del item seleccionado, esto con metodo de combobox getSelectedItem y hacemos un parse a string
                if(itemSeleccionado.equals("Linea A")){
                //si la opcion que seleccionaron fue linea A
                estacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccionar","La Estrella","Sabaneta","Itagui","Envigado","Ayura","Aguacatala","El Poblado","Industriales","Exposiciones","Alpujarra","San Antonio","Parque Berrio","Prado","Hospital","Universidad","Caribe","Tricentenario","Acevedo","Madera","Bello","Niquia"}));
                //un modelo de dato es lo que indica LOS ELEMENTOS QUE SE MOSTRARÁN(por eso le pasamos un array de strings) y como se deben gestionar estos.
                //con el setModel definimos el modelo de datos de nuestro comboBox, los modelos de estos son ComboBoxModel, por lo que siempre que usemos un setmodel debemos usar algun tipo de comboboxmodel
                //en este caso usaremos uno de tipo default, el cual espera recibir los contenidos que debe mostrar (array en este caso)                
                // el <> es para que no tengamos que establecer el tipo de dato, sino que el compilador lo infiera con el siguiente comando, que es un array de Strings.
                
                //entonces a ver si entendi bien, con el setmodel le indicamos al combobox los elementos a mostrar y como los debe gestionar, este setmodel tiene diferentes modelos, nosotros le indicamos que usaremos el default, y como el setModel a demas de esperar el modelo con el que se gestionaran los datos, espera tambien estos datos, se los cpasamos, que en este caso es un array de strings
                }else if(itemSeleccionado.equals("Linea B")){
                estacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccionar","San Javier","Santa Lucía","Floresta","Estadio","Suramericana","Cisneros","San Antonio"}));
                }
            }
        }
        //si el event viene de estacion;
        if(e.getSource()== estacion){
            if(e.getStateChange() == ItemEvent.SELECTED){
            estacionSeleccionada=(String) estacion.getSelectedItem();
            
            switch(estacionSeleccionada){
                case "La Estrella":
                    //fotoEstacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen.estacion/laEstrella.png")));
                    //fotoEstacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("imagen/estacion/laEstrella.png")));
                     cambiarTexto(estacionSeleccionada);
                     cambiarImagen(estacionSeleccionada);
                    break;
                case "Sabaneta":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                case "Itagui":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Envigado":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Ayura":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Aguacatala":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "El Poblado":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Industriales":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Exposiciones":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Alpujarra":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "San Antonio":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Parque Berrio":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Prado":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Hospital":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Universidad":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Caribe":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Tricentenario":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Acevedo":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Madera":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Bello":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Niquia":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                    //-----------------------------------------------
                case "San Javier":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Santa Lucía":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Floresta":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Estadio":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Suramericana":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
                case "Cisneros":
                    cambiarTexto(estacionSeleccionada);
                    cambiarImagen(estacionSeleccionada);
                    break;
            }
            //if(estacionSeleccionada.equals("La estrella")){
            //fotoEstacion.setIcon
            //}
        }
        }
    }
    
 
    //javax.... son tipos de datos (mejor dicho, son objetos con su clase, Persona pers1)
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> estacion;
    private javax.swing.JLabel fotoEstacion;
    private javax.swing.JLabel horarios;
    private javax.swing.JLabel iconoCasita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabel_lineaMetro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> lineaMetro;
    private javax.swing.JLabel textoCantPasajeros;
    // End of variables declaration//GEN-END:variables
    private String itemSeleccionado;
    private String estacionSeleccionada;
    private int cantidadPasajeros;
}
