/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parchatemetro;
    import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;

import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author Daniela
 */
public class Lugares extends javax.swing.JFrame implements ItemListener {

    /**
     * Creates new form Lugares
     */
    ///TAREAS
    //CASITA Y HORARIOS
    //EVITAR ESCRITURA EN JTEXTAREA
    
    public Lugares() {
        initComponents();
        this.setLocationRelativeTo(null);
        //añadimos listeners
        //el this nos indica el atributo o metodo de un objeto ESPECIFICO (al que le estamos aplicando el metodo)
        //durante la ejecucion (instancia actual), es decir
        //si yo tengo x objeto, al que quiero acceder al atributo, con el this indico que necesito el atributo de ESE
        //objeto que esta siendo ejecutado.
        //en este caso le estamos diciendo que el objeto que le pasaremos será el definido anonimamente en el main
        lineaMetro.addItemListener(this);
        //el add... es un metodo de los JcomboBox, no del ItemListener
        estacion.addItemListener(this);
        
        //-------------------------------------------Mouse----------------------------
        //le agregamos el listener así y no lo implementamos (la interfaz mouselistener) porque si lo implementamos, al 
        //ser una interfaz, debemos sobreescribir todos sus metodos(que en este caso son 5, con el ItemListener 
        //no tenemos ese problema porque esta interfaz tiene un solo metodo, que es el que estamos usando), por 
        //lo que usamos ("heredamos") clases adaptadoras(MouseAdapter), las clases adaptadoras
        //son clases que implementan una interfaz y les da una "implementacion" o las sobreescribe de forma vacia, para
        //que al nosotros heredarla solo sobreescribamos los metodos que nos interesan, ene ste caso, el mouseClicked
        //como addmouse... es un metodo de JComboBox, lo podemos usar, y en vez de pasarle como parametro this (no lo 
        //podemos hacer porque no estamos implementando la interfaz)
        //POR QUE PUEDO PASAR COMO PARAMETRO THIS?
        //Los comboBox tienen un metodo llamado addItemListener (entre otros), los caules esperan un objeto ItemListener
        //si yo implemento una interfaz en una clase, automaticamente mis objetos tendrán como tipo de dato mi clase 
        //y la interfaz, que es lo que quiero, por eso los puedo pasar como parametro con this, PERO si yo no implemento
        //una interfaz, mis objetos no serán de ese tipo, por lo que no los puedo pasar con this, por esto no puedo poner
        //addMouseListener(this); sino que tengo que usar una clase adaptadora, en este caso MouseAdapter
        
        favorito.addMouseListener(new MouseAdapter(){
            //aqui le pasamos como parametro al listener un objeto (clase anonima que sobreescribe el metodo que 
            //le interesa, el cual es mouseClicked) de tipo mouseAdapter, tipo de dato que el admite
           // public void FavoritosChange()
            @Override
            public void mouseClicked(MouseEvent e){
                //que cuando lo toquen cambie de icono
                ImageIcon img= new ImageIcon(getClass().getResource("/imagen/favoritoClicked.png"));
                Icon icon= new ImageIcon(img.getImage());
                favorito.setIcon(icon);
                //System.out.println("Escuche click");
                JOptionPane.showMessageDialog(null, "Se agregó a Favoritos");
                guardarFavorito(); 
            }
        });
        //-------------------------Redireccion de iconos--------------------------
        horarios.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                // Hacer visible la otra pestaña
                horarios otraPestana = new horarios();
                otraPestana.setVisible(true);
                dispose();
            }
        });
        iconoCasita.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                // Hacer visible la otra pestaña
                casita otraPestana = new casita();
                otraPestana.setVisible(true);
                dispose();
            }
        });
        //------------------------------------------------------------
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        horarios = new javax.swing.JLabel();
        iconoCasita = new javax.swing.JLabel();
        jLabelEstacion = new javax.swing.JLabel();
        jLabelLinea = new javax.swing.JLabel();
        lineaMetro = new javax.swing.JComboBox<>();
        estacion = new javax.swing.JComboBox<>();
        jLabelLinks = new javax.swing.JLabel();
        favorito = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        relleno = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        horarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/Horarios.png"))); // NOI18N
        jPanel1.add(horarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 60, 20));

        iconoCasita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/casa.png"))); // NOI18N
        jPanel1.add(iconoCasita, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        jLabelEstacion.setText("Seleccione estación");
        jPanel1.add(jLabelEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jLabelLinea.setText("Seleccione linea de metro");
        jPanel1.add(jLabelLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        lineaMetro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Linea A", "Linea B" }));
        lineaMetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineaMetroActionPerformed(evt);
            }
        });
        jPanel1.add(lineaMetro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        jPanel1.add(estacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jLabelLinks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabelLinks, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 140, 80));

        favorito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/favoritoUnclicked.png"))); // NOI18N
        jPanel1.add(favorito, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 30, 30));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondoLugares.png"))); // NOI18N
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 260));

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));
        jPanel1.add(relleno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 270, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lineaMetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineaMetroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lineaMetroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lugares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lugares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lugares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lugares.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        //----------------------------------------------------esto indica que estamos llamando al contructor una clase de tipo java.awt...,al cual le pasamos como parametros
        //una clase anonima.
        java.awt.EventQueue.invokeLater(new Runnable() {
            //Runnable tambien es una clase anonima, que sobreescribe el metodo run
            public void run() {
                //creamos una clase anonima
                // una clase anonima es aquella que se declara e instancia al mismo tiempo, se identifica 
                //principalmente porque sobreescribe los metodos de la clase que hereda entre llaves, decimos que
                //hereda porque para que un objeto de cualquier clase sea de otro tipo es porquese hereda otra clase, 
                //por ejemplo, Figura miFig= new Triangulo(), Triangulo debe heredar a Figura, y aunque usualmente
                //estas clases no tienen nombre, se pueden guardar en una variable, la cual debe ser del mismo tipo 
                //del objeto (por ejemplo: Gato miGato=new Gato() {}), pero no es porque miGato sea una clase, 
                //sino que es una variable. Este tipo de clases se usan porque son objetos que solo se van a usar 
                //una vez
                new Lugares().setVisible(true);
                //nFav.setVisible(true);
                /* si yo tengo
                new Gato(){
                public void run(){
                xxxxxx
                   }
                }.gritar();
                yo eso no lo puedo hacer, porque el metodo gritar no esta definido
                otra cosa es que yo cree una clase anonima de una clase predefinida, y sobreescriba x metodos(o incluso no tengo que sobreescribir ninguno, como con Lugares), pero aplique otro al final, como en el ejemplo de Threads*/
            }
        });
        
    }  
    
    public void cambiarTexto(String texto){
        jLabelLinks.setText(texto);
    }
    
    public void guardarFavorito(){
        //creamos un objeto de tipo Favoritos para poder acceder a sus metodos
        //if contenidoLabel=null entonces ignore
        miFav.setVisible(true);
        contenidoLabel=jLabelLinks.getText();
        miFav.capturarDatos(contenidoLabel);
        //miFav.cambios();
        //System.out.println("copia favoritos:");s
        //nFav.cambios();
        //System.out.println("Hola, te cuento lo que me dijeron; "+contenidoLabel);
        //int hash = System.identityHashCode(miFav);
        //System.out.println(hash);
    }
    
    @Override
    public void itemStateChanged(ItemEvent e){
      if(e.getSource()==lineaMetro){
          //para que el icono aparezca unclicked cuando cambie de linea de metro, pq sino se quedará negro
        ImageIcon img= new ImageIcon(getClass().getResource("/imagen/favoritoUnclicked.png"));
        Icon icon= new ImageIcon(img.getImage());
        favorito.setIcon(icon);
          //obliga a un cambio en el item seleccionado, o sea, si seleccionan el mismo no realizará estas acciones, si lo escucha, pero no hace nada
          if(e.getStateChange()==ItemEvent.SELECTED){
              //System.out.println("Escucheee");
              itemSeleccionado=(String) e.getItem();
              if(itemSeleccionado.equalsIgnoreCase("Linea A")){
                  estacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccionar","La Estrella","Sabaneta","Itagui","Envigado","Ayura","Aguacatala","El Poblado","Industriales","Exposiciones","Alpujarra","San Antonio","Parque Berrio","Prado","Hospital","Universidad","Caribe","Tricentenario","Acevedo","Madera","Bello","Niquia"}));
                  //System.out.println("Linea AAA");
              }else if(itemSeleccionado.equalsIgnoreCase("Linea B")){
                  estacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccionar","San Javier","Santa Lucía","Floresta","Estadio","Suramericana","Cisneros","San Antonio"}));
                  //System.out.println("Linea BBBB");
              }
          
          }
      }
      if(e.getSource()==estacion){
          //para que cuando cambien de item, el boton se devuelva al estado normal
        ImageIcon img= new ImageIcon(getClass().getResource("/imagen/favoritoUnclicked.png"));
        Icon icon= new ImageIcon(img.getImage());
        favorito.setIcon(icon);
        estacionSeleccionada=(String) e.getItem();
        switch(estacionSeleccionada){
              case "La Estrella":
                  //---------------------------------------------como hacer para que en la estacion especifica se quede con boton en negro una vez que cambie a otra
                  cambiarTexto("https://laestrella.com");    
                  
                    break;
                case "Sabaneta":
                    cambiarTexto("https://sabaneta.com");
                    
                    break;
                case "Itagui":
                   cambiarTexto("https://itagui.com");
                    break;
                case "Envigado":
                    cambiarTexto("https://envigado.com");
                    break;
                case "Ayura":
                    cambiarTexto("https://ayura.com");
                    break;
                case "Aguacatala":
                    cambiarTexto("https://aguacatala.com");
                    break;
                case "El Poblado":
                    cambiarTexto("https://elpoblado.com");
                    break;
                case "Industriales":
                    cambiarTexto("https://industriales.com");
                    break;
                case "Exposiciones":
                    cambiarTexto("https://exposiciones.com");
                    break;
                case "Alpujarra":
                    cambiarTexto("https://alpujarra.com");
                    break;
                case "San Antonio":
                    cambiarTexto("https://sanantonio.com");
                    break;
                case "Parque Berrio":
                    cambiarTexto("https://parqueberrio.com");
                    break;
                case "Prado":
                    cambiarTexto("https://prado.com");
                    break;
                case "Hospital":
                    cambiarTexto("https://hospital.com");
                    break;
                case "Universidad":
                    cambiarTexto("https://universidad.com");
                    break;
                case "Caribe":
                    cambiarTexto("https://caribe.com");
                    break;
                case "Tricentenario":
                    cambiarTexto("https://tricentenario.com");
                    break;
                case "Acevedo":
                    cambiarTexto("https://acevedo.com");
                    break;
                case "Madera":
                    cambiarTexto("https://madera.com");
                    break;
                case "Bello":
                    cambiarTexto("https://bello.com");
                    break;
                case "Niquia":
                    cambiarTexto("https://niquia.com");
                    break;
                    //-----------------------------------------------
                case "San Javier":
                    cambiarTexto("https://sanjavier.com");
                    break;
                case "Santa Lucía":
                    cambiarTexto("https://santalucia.com");
                    break;
                case "Floresta":
                    cambiarTexto("https://floresta.com");
                    break;
                case "Estadio":
                    cambiarTexto("https://estadio.com");
                    break;
                case "Suramericana":
                    cambiarTexto("https://suramericana.com");
                    break;
                case "Cisneros":
                    cambiarTexto("https://cisneros.com");
                    break;
          }
      }
    }
 
    public Favoritos getObjeto(){
        return miFav;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> estacion;
    private javax.swing.JLabel favorito;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel horarios;
    private javax.swing.JLabel iconoCasita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEstacion;
    private javax.swing.JLabel jLabelLinea;
    private javax.swing.JLabel jLabelLinks;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> lineaMetro;
    private javax.swing.JLabel relleno;
    // End of variables declaration//GEN-END:variables
    private String itemSeleccionado;
    private String estacionSeleccionada;
    private String contenidoLabel;
    public boolean seleccionFavorito;
    //declaramos objeto global para poder acceder a él desde otras clases (si lo creamos dentro de mouseClicked se crearán
    //multiples instancias al final (una por cada click))
    public static Favoritos miFav = new Favoritos();
    public static Favoritos nFav=Lugares.miFav;
    //private String x;
    
}